/* eslint-disable no-console */
const { readdirSync, writeFileSync } = require("fs")
const { join } = require("path")
const { languages, paths } = require("../src/i18n/config")

const namespaces = new Set()
let out = `/**
 * This file was automatically generated by npm_scripts/i18n:type.js.
 * DO NOT MODIFY IT BY HAND.
 */\n\n`
out += "export type SupportedLanguage =\n"

const localesDir = readdirSync(join(__dirname, "../src/i18n/locales"), { withFileTypes: true })

for (const language of languages) {
  if (!localesDir.some(languageDir => languageDir.isDirectory() && languageDir.name === language)) {
    throw new Error(`Missing ${language} folder in src/i18n/locales`)
  }

  out += `\t| "${language}"\n`

  for (const namespace of readdirSync(join(__dirname, `../src/i18n/locales/${language}`), { withFileTypes: true })) {
    if (namespace.isFile()) {
      namespaces.add(namespace.name)
    }
  }
}

out += "\nexport type Namespace =\n"
Array.from(namespaces).forEach(ns => out += `\t| "${ns.replace(".json", "")}"\n`)

out += "\nexport type Route =\n\t|  \"/\"\n"
Object.keys(paths).forEach(path => out += `\t| "${path}"\n`)

writeFileSync(join(__dirname, "../src/types/i18n.d.ts"), out)
console.log("i18n types generated successfully")
